apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "ru.l4gunner4l.contactsapp"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    androidExtensions {
        experimental = true
    }
}

dependencies {
    def rx_java2 = "2.1.1"
    def gson = "2.8.6"
    def glide = "4.11.0"
    def koin = '2.1.6'
    def room = "2.2.5"
    def lifecycle = "2.2.0"
    def arch = "2.1.0"
    def adapter_delegates = "4.3.0"
    def material = "1.2.1"
    def dagger = "2.29.1"
    def cicerone = "5.1.1"
    def fragment_ktx = '1.3.0-beta01'

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.10"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle"

    testImplementation "androidx.arch.core:core-testing:$arch"

    implementation "io.reactivex.rxjava2:rxjava:$rx_java2"
    implementation "io.reactivex.rxjava2:rxandroid:$rx_java2"

    implementation "com.google.code.gson:gson:$gson"

    implementation "com.github.bumptech.glide:glide:$glide"

    // Koin
    implementation "org.koin:koin-core:$koin"
    implementation "org.koin:koin-core-ext:$koin"
    testImplementation "org.koin:koin-test:$koin"
    implementation "org.koin:koin-androidx-scope:$koin"
    implementation "org.koin:koin-androidx-viewmodel:$koin"
    implementation "org.koin:koin-androidx-fragment:$koin"
    implementation "org.koin:koin-androidx-ext:$koin"

    // Room
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-rxjava2:$room"
    implementation "androidx.room:room-guava:$room"
    testImplementation "androidx.room:room-testing:$room"

    // Adapter Delegate
    implementation "com.hannesdorfmann:adapterdelegates4-kotlin-dsl:$adapter_delegates"
    implementation "com.hannesdorfmann:adapterdelegates4-kotlin-dsl-layoutcontainer:$adapter_delegates"
    implementation "com.hannesdorfmann:adapterdelegates4-kotlin-dsl-viewbinding:$adapter_delegates"

    //Material
    implementation "com.google.android.material:material:$material"

    implementation 'de.hdodenhof:circleimageview:3.1.0'
    //Cicerone
    implementation "ru.terrakok.cicerone:cicerone:$cicerone"

    //Dagger
    implementation "com.google.dagger:dagger:$dagger"
    implementation "com.google.dagger:dagger-android:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    kapt "com.google.dagger:dagger-android-support:$dagger"

    implementation "androidx.fragment:fragment-ktx:$fragment_ktx"
}